From ddd2789a84bb1d7e011cbcdc727aa2c7d18279a4 Mon Sep 17 00:00:00 2001
From: Valentine Barshak <valentine.barshak@cogentembedded.com>
Date: Sat, 6 Feb 2021 04:49:43 +0300
Subject: [PATCH 08/18] plat: renesas: rcar: Add R-Car V3U support

This adds preliminary R-Car V3U support.

Signed-off-by: Valentine Barshak <valentine.barshak@cogentembedded.com>
---
 drivers/renesas/rcar/board/board.c                 |  5 ++
 drivers/renesas/rcar/board/board.h                 |  3 +-
 drivers/renesas/rcar/dma/dma_driver.c              | 50 +++++++++++----
 drivers/renesas/rcar/emmc/emmc_init.c              |  8 ++-
 drivers/renesas/rcar/emmc/emmc_registers.h         |  8 +++
 drivers/renesas/rcar/rom/rom_api.c                 |  4 ++
 drivers/renesas/rcar/rpc/rpc_driver.c              | 12 +++-
 drivers/renesas/rcar/scif/scif.S                   |  8 +++
 drivers/renesas/rcar/watchdog/swdt.c               |  2 +
 plat/renesas/rcar/aarch64/platform_common.c        |  6 ++
 plat/renesas/rcar/bl2_cpg_init.c                   | 74 ++++++++++++++++++++++
 plat/renesas/rcar/bl2_plat_setup.c                 | 30 +++++++++
 plat/renesas/rcar/bl31_plat_setup.c                |  3 +-
 plat/renesas/rcar/include/platform_def.h           | 12 +++-
 plat/renesas/rcar/include/rcar_def.h               | 20 +++++-
 .../renesas/rcar/include/registers/cpg_registers.h | 49 ++++++++++++++
 plat/renesas/rcar/plat_pm.c                        |  4 ++
 plat/renesas/rcar/platform.mk                      | 54 ++++++++++++++--
 plat/renesas/rcar/rcar_common.c                    | 15 +++--
 19 files changed, 333 insertions(+), 34 deletions(-)

diff --git a/drivers/renesas/rcar/board/board.c b/drivers/renesas/rcar/board/board.c
index e29a4cb..30f1039 100644
--- a/drivers/renesas/rcar/board/board.c
+++ b/drivers/renesas/rcar/board/board.c
@@ -22,6 +22,8 @@
 #define BOARD_DEFAULT		(BOARD_EAGLE << BOARD_CODE_SHIFT)
 #elif (RCAR_LSI == RCAR_V3H)
 #define BOARD_DEFAULT		(BOARD_CONDOR << BOARD_CODE_SHIFT)
+#elif (RCAR_LSI == RCAR_V3U)
+#define BOARD_DEFAULT		(BOARD_FALCON << BOARD_CODE_SHIFT)
 #else
 #define BOARD_DEFAULT		(BOARD_SALVATOR_X << BOARD_CODE_SHIFT)
 #endif
@@ -42,6 +44,7 @@
 #define EA_ID	{ 0x10U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU }
 #define CR_ID	{ 0x10U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU }
 #define KK_ID	{ 0x10U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU }
+#define FN_ID	{ 0x10U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU }
 
 const char *g_board_tbl[] = {
 	[BOARD_STARTER_KIT_PRE] = "Starter Kit Premier",
@@ -54,6 +57,7 @@ const char *g_board_tbl[] = {
 	[BOARD_DRAAK] = "Draak",
 	[BOARD_EAGLE] = "Eagle",
 	[BOARD_CONDOR] = "Condor",
+	[BOARD_FALCON] = "Falcon",
 	[BOARD_UNKNOWN] = "unknown"
 };
 
@@ -70,6 +74,7 @@ int32_t rcar_get_board_type(uint32_t *type, uint32_t *rev)
 		[BOARD_DRAAK] = DR_ID,
 		[BOARD_EAGLE] = EA_ID,
 		[BOARD_CONDOR] = CR_ID,
+		[BOARD_FALCON] = FN_ID,
 		[BOARD_KRIEK] = KK_ID,
 	};
 	static uint8_t board_id = BOARD_ID_UNKNOWN;
diff --git a/drivers/renesas/rcar/board/board.h b/drivers/renesas/rcar/board/board.h
index 6ea6842..fa06651 100644
--- a/drivers/renesas/rcar/board/board.h
+++ b/drivers/renesas/rcar/board/board.h
@@ -18,7 +18,8 @@
 #define BOARD_DRAAK			(0x0EU)
 #define BOARD_EAGLE			(0x0FU)
 #define BOARD_CONDOR			(0x10U)
-#define BOARD_UNKNOWN			(BOARD_CONDOR + 1U)
+#define BOARD_FALCON			(0x11U)
+#define BOARD_UNKNOWN			(BOARD_FALCON + 1U)
 
 #define BOARD_REV_UNKNOWN		(0xFF)
 
diff --git a/drivers/renesas/rcar/dma/dma_driver.c b/drivers/renesas/rcar/dma/dma_driver.c
index 7f928dd..76b0d90 100644
--- a/drivers/renesas/rcar/dma/dma_driver.c
+++ b/drivers/renesas/rcar/dma/dma_driver.c
@@ -15,13 +15,31 @@
 #include "cpg_registers.h"
 #include "rcar_private.h"
 
+#if RCAR_LSI == RCAR_V3U
+#define DMA_CH		0
+#define DMA_CPG_SREG	CPG_MSTPSR7
+#define DMA_CPG_CREG	CPG_SMSTPCR7
+#define SYS_DMAC_BIT	((uint32_t)1U << 9U)
+#define DMA_BASE	(0xE7300000U)
+#define DMA_CTL_BASE	(0xE7350000U)
+#define DMA_CHAN_OFFSET	((uint32_t)((DMA_CH) * 0x1000U))
+#define DMA_CHAN_BASE	(DMA_BASE + DMA_CHAN_OFFSET)
+/* DMA secure control */
+#define	DMA_DMASEC	(DMA_CHAN_BASE + 0x0080U)
+/* DMA channel clear */
+#define DMA_DMACHCLR	(DMA_CHAN_BASE + 0x0100U)
+#define	DMA_USE_CHANNEL		(0x00000001U)
+#else
 /* DMA CHANNEL setting (0/16/32) */
-#if (RCAR_LSI == RCAR_V3M) || (RCAR_LSI == RCAR_V3H)	/* V3M/V3H */
+#if (RCAR_LSI == RCAR_V3M) || (RCAR_LSI == RCAR_V3H)	/* V3M/V3H/V3U */
 #define	DMA_CH		16
 #else
 #define	DMA_CH		0
 #endif
 
+#define DMA_CPG_SREG	CPG_MSTPSR2
+#define DMA_CPG_CREG	CPG_SMSTPCR2
+
 #if (DMA_CH == 0)
 #define SYS_DMAC_BIT	((uint32_t)1U << 19U)
 #define DMA_BASE	(0xE6700000U)
@@ -36,26 +54,30 @@
 #define DMA_BASE	(0xE6700000U)
 #endif
 
-/* DMA operation */
-#define DMA_DMAOR	(DMA_BASE + 0x0060U)
+#define DMA_CTL_BASE	(DMA_BASE)
+#define DMA_CHAN_BASE	(DMA_BASE + 0x8000U)
 /* DMA secure control */
-#define	DMA_DMASEC	(DMA_BASE + 0x0030U)
+#define	DMA_DMASEC	(DMA_CTL_BASE + 0x0030U)
 /* DMA channel clear */
-#define DMA_DMACHCLR	(DMA_BASE + 0x0080U)
+#define DMA_DMACHCLR	(DMA_CTL_BASE + 0x0080U)
+
+#define	DMA_USE_CHANNEL		(0x00000001U)
+#endif
+
+/* DMA operation */
+#define DMA_DMAOR	(DMA_CTL_BASE + 0x0060U)
 /* DMA source address */
-#define DMA_DMASAR	(DMA_BASE + 0x8000U)
+#define DMA_DMASAR	(DMA_CHAN_BASE + 0x0000U)
 /* DMA destination address */
-#define DMA_DMADAR	(DMA_BASE + 0x8004U)
+#define DMA_DMADAR	(DMA_CHAN_BASE + 0x0004U)
 /* DMA transfer count */
-#define DMA_DMATCR	(DMA_BASE + 0x8008U)
+#define DMA_DMATCR	(DMA_CHAN_BASE + 0x0008U)
 /* DMA channel control */
-#define DMA_DMACHCR	(DMA_BASE + 0x800CU)
+#define DMA_DMACHCR	(DMA_CHAN_BASE + 0x000CU)
 /* DMA fixed destination address */
-#define DMA_DMAFIXDAR	(DMA_BASE + 0x8014U)
+#define DMA_DMAFIXDAR	(DMA_CHAN_BASE + 0x0014U)
 
-#define	DMA_USE_CHANNEL		(0x00000001U)
 #define	DMAOR_INITIAL		(0x0301U)
-#define	DMACHCLR_CH_ALL		(0x0000FFFFU)
 #define	DMAFIXDAR_32BIT_SHIFT	(32U)
 #define	DMAFIXDAR_DAR_MASK	(0x000000FFU)
 #define	DMADAR_BOUNDARY_ADDR	(0x100000000ULL)
@@ -76,13 +98,13 @@
 
 static void dma_enable(void)
 {
-	mstpcr_write(CPG_SMSTPCR2, CPG_MSTPSR2, SYS_DMAC_BIT);
+	mstpcr_write(DMA_CPG_CREG, DMA_CPG_SREG, SYS_DMAC_BIT);
 }
 
 static void dma_setup(void)
 {
 	mmio_write_16(DMA_DMAOR, 0);
-	mmio_write_32(DMA_DMACHCLR, DMACHCLR_CH_ALL);
+	mmio_write_32(DMA_DMACHCLR, DMA_USE_CHANNEL);
 }
 
 static void dma_start(uintptr_t dst, uint32_t src, uint32_t len)
diff --git a/drivers/renesas/rcar/emmc/emmc_init.c b/drivers/renesas/rcar/emmc/emmc_init.c
index 0f2faba..d8266be 100644
--- a/drivers/renesas/rcar/emmc/emmc_init.c
+++ b/drivers/renesas/rcar/emmc/emmc_init.c
@@ -87,11 +87,11 @@ static EMMC_ERROR_CODE emmc_dev_finalize(void)
 	SETR_32(SD_INFO2_MASK, SD_INFO2_CLEAR);	/* all interrupt disable */
 	SETR_32(SD_CLK_CTRL, 0x00000000U);	/* MMC clock stop */
 
-	dataL = mmio_read_32(SMSTPCR3);
+	dataL = mmio_read_32(MMC_CPG_CREG);
 	if ((dataL & CPG_MSTP_MMC) == 0U) {
 		dataL |= (CPG_MSTP_MMC);
 		mmio_write_32(CPG_CPGWPR, (~dataL));
-		mmio_write_32(SMSTPCR3, dataL);
+		mmio_write_32(MMC_CPG_CREG, dataL);
 	}
 
 	return result;
@@ -100,13 +100,15 @@ static EMMC_ERROR_CODE emmc_dev_finalize(void)
 static EMMC_ERROR_CODE emmc_dev_init(void)
 {
 	/* Enable clock supply to eMMC. */
-	mstpcr_write(SMSTPCR3, CPG_MSTPSR3, CPG_MSTP_MMC);
+	mstpcr_write(MMC_CPG_CREG, MMC_CPG_SREG, CPG_MSTP_MMC);
 
+#if RCAR_LSI != RCAR_V3U
 	/* Set SD clock */
 	mmio_write_32(CPG_CPGWPR, ~((uint32_t) (BIT9 | BIT0)));	/* SD phy 200MHz */
 
 	/* Stop SDnH clock & SDn=200MHz */
 	mmio_write_32(CPG_SDxCKCR, (BIT9 | BIT0));
+#endif
 
 	/* MMCIF initialize */
 	SETR_32(SD_INFO1, 0x00000000U);		/* all interrupt clear */
diff --git a/drivers/renesas/rcar/emmc/emmc_registers.h b/drivers/renesas/rcar/emmc/emmc_registers.h
index 01eb917..2f142ab 100644
--- a/drivers/renesas/rcar/emmc/emmc_registers.h
+++ b/drivers/renesas/rcar/emmc/emmc_registers.h
@@ -232,11 +232,19 @@
 
 /** @brief SYSC Registers
  */
+#if RCAR_LSI == RCAR_V3U /* RCAR_LSI == RCAR_V3U */
+#define MMC_CPG_CREG		CPG_SMSTPCR7
+#define MMC_CPG_SREG		CPG_MSTPSR7
+#define CPG_MSTP_MMC		(BIT6)	/* SDHI2/MMC0 */
+#else /* RCAR_LSI == RCAR_V3U */
+#define MMC_CPG_CREG		SMSTPCR3
+#define MMC_CPG_SREG		CPG_MSTPSR3
 #if USE_MMC_CH == MMC_CH0
 #define CPG_MSTP_MMC		(BIT12)	/* SDHI2/MMC0 */
 #else /* USE_MMC_CH == MMC_CH0 */
 #define CPG_MSTP_MMC		(BIT11)	/* SDHI3/MMC1 */
 #endif /* USE_MMC_CH == MMC_CH0 */
+#endif /* RCAR_LSI == RCAR_V3U */
 
 /* ********************** STRUCTURES, TYPE DEFINITIONS ********************* */
 
diff --git a/drivers/renesas/rcar/rom/rom_api.c b/drivers/renesas/rcar/rom/rom_api.c
index a597528..15dc28d 100644
--- a/drivers/renesas/rcar/rom/rom_api.c
+++ b/drivers/renesas/rcar/rom/rom_api.c
@@ -69,6 +69,10 @@ static uint32_t get_table_index(void)
 			index = API_TABLE_MAX;
 		break;
 
+	case PRR_PRODUCT_V3U:
+		index = API_TABLE_MAX;
+		break;
+
 	default:
 		index = NEW_API_TABLE;
 		break;
diff --git a/drivers/renesas/rcar/rpc/rpc_driver.c b/drivers/renesas/rcar/rpc/rpc_driver.c
index 63de5b8..39aabd1 100644
--- a/drivers/renesas/rcar/rpc/rpc_driver.c
+++ b/drivers/renesas/rcar/rpc/rpc_driver.c
@@ -15,7 +15,17 @@
 #include "rcar_private.h"
 #include "rpc_registers.h"
 
+#if RCAR_LSI == RCAR_V3U
+#define MSTPSR6_RPC_BIT		(0x1U << 29)	// V3U
+#define RPC_CPG_CREG		CPG_SMSTPCR6
+#define RPC_CPG_SREG		CPG_MSTPSR6
+#define RPC_CPG_CLK_BIT		MSTPSR6_RPC_BIT
+#else
 #define MSTPSR9_RPC_BIT		(0x00020000U)
+#define RPC_CPG_CREG		CPG_SMSTPCR9
+#define RPC_CPG_SREG		CPG_MSTPSR9
+#define RPC_CPG_CLK_BIT		MSTPSR9_RPC_BIT
+#endif
 #define RPC_CMNCR_MD_BIT	(0x80000000U)
 #define RPC_PHYCNT_CAL		BIT(31)
 #define RPC_PHYCNT_STRTIM_M3V1	(0x6 << 15UL)
@@ -24,7 +34,7 @@
 static void rpc_enable(void)
 {
 	/* Enable clock supply to RPC. */
-	mstpcr_write(CPG_SMSTPCR9, CPG_MSTPSR9, MSTPSR9_RPC_BIT);
+	mstpcr_write(RPC_CPG_CREG, RPC_CPG_SREG, RPC_CPG_CLK_BIT);
 }
 
 static void rpc_setup(void)
diff --git a/drivers/renesas/rcar/scif/scif.S b/drivers/renesas/rcar/scif/scif.S
index e5adfec..6ef6be7 100644
--- a/drivers/renesas/rcar/scif/scif.S
+++ b/drivers/renesas/rcar/scif/scif.S
@@ -45,6 +45,14 @@
 #define CPG_SMSTPCR		CPG_SMSTPCR2
 #define CPG_MSTPSR		CPG_MSTPSR2
 #define MSTP			MSTP207
+#elif (RCAR_LSI == RCAR_V3U) /* V3U */
+#define CPG_MSTPSR7		(0x2E1C)
+#define CPG_SMSTPCR7		(0x2D1C)
+#define MSTP702			(1 << 2)
+#define SCIF_BASE		SCIF0_BASE
+#define CPG_SMSTPCR		CPG_SMSTPCR7
+#define CPG_MSTPSR		CPG_MSTPSR7
+#define MSTP			MSTP702
 #else
 #define SCIF_BASE		SCIF2_BASE
 #define CPG_SMSTPCR		CPG_SMSTPCR3
diff --git a/drivers/renesas/rcar/watchdog/swdt.c b/drivers/renesas/rcar/watchdog/swdt.c
index 1bf9179..647f6cf 100644
--- a/drivers/renesas/rcar/watchdog/swdt.c
+++ b/drivers/renesas/rcar/watchdog/swdt.c
@@ -141,7 +141,9 @@ void rcar_swdt_release(void)
 	write_scr_el3(read_scr_el3() & ~SCR_FIQ_BIT);
 
 	swdt_disable();
+#if RCAR_LSI != RCAR_V3U
 	gicv2_cpuif_disable();
+#endif
 
 	for (i = 0; i < IGROUPR_NUM; i++)
 		mmio_write_32(SWDT_GICD_IGROUPR + i * 4, 0U);
diff --git a/plat/renesas/rcar/aarch64/platform_common.c b/plat/renesas/rcar/aarch64/platform_common.c
index 2266016..f3b0e3e 100644
--- a/plat/renesas/rcar/aarch64/platform_common.c
+++ b/plat/renesas/rcar/aarch64/platform_common.c
@@ -219,11 +219,14 @@ unsigned int plat_get_syscnt_freq2(void)
 
 void plat_rcar_gic_init(void)
 {
+#if (RCAR_LSI != RCAR_V3U)
 	gicv2_distif_init();
 	gicv2_pcpu_distif_init();
 	gicv2_cpuif_enable();
+#endif
 }
 
+#if (RCAR_LSI != RCAR_V3U)
 static const interrupt_prop_t interrupt_props[] = {
 #if IMAGE_BL2
 	INTR_PROP_DESC(ARM_IRQ_SEC_WDT, GIC_HIGHEST_SEC_PRIORITY,
@@ -270,8 +273,11 @@ static const gicv2_driver_data_t plat_gicv2_driver_data = {
 	.gicd_base = RCAR_GICD_BASE,
 	.gicc_base = RCAR_GICC_BASE,
 };
+#endif
 
 void plat_rcar_gic_driver_init(void)
 {
+#if (RCAR_LSI != RCAR_V3U)
 	gicv2_driver_init(&plat_gicv2_driver_data);
+#endif
 }
diff --git a/plat/renesas/rcar/bl2_cpg_init.c b/plat/renesas/rcar/bl2_cpg_init.c
index 0498f0d..3343902 100644
--- a/plat/renesas/rcar/bl2_cpg_init.c
+++ b/plat/renesas/rcar/bl2_cpg_init.c
@@ -38,6 +38,11 @@ static void bl2_realtime_cpg_init_v3h(void);
 static void bl2_system_cpg_init_v3h(void);
 #endif
 
+#if RCAR_LSI == RCAR_V3U
+static void bl2_realtime_cpg_init_v3u(void);
+static void bl2_system_cpg_init_v3u(void);
+#endif
+
 #if (RCAR_LSI == RCAR_AUTO) || (RCAR_LSI == RCAR_E3)
 static void bl2_realtime_cpg_init_e3(void);
 static void bl2_system_cpg_init_e3(void);
@@ -55,10 +60,19 @@ typedef struct {
 
 static void bl2_secure_cpg_init(void)
 {
+#if RCAR_LSI != RCAR_V3U
 	uint32_t stop_cr2, reset_cr2;
 	uint32_t stop_cr4, reset_cr4;
 	uint32_t stop_cr5, reset_cr5;
 
+#if RCAR_LSI == RCAR_AUTO
+	uint32_t prr;
+
+	prr = mmio_read_32(RCAR_PRR) & RCAR_CUT_MASK;
+	if (prr == RCAR_PRODUCT_V3U)
+		panic();
+#endif
+
 #if (RCAR_LSI == RCAR_D3)
 	reset_cr2 = 0x00000000U;
 	stop_cr2 = 0xFFFFFFFFU;
@@ -109,6 +123,7 @@ static void bl2_secure_cpg_init(void)
 	cpg_write(SCSRSTECR9, 0x00020000U);
 	cpg_write(SCSRSTECR10, 0x00000000U);
 	cpg_write(SCSRSTECR11, 0x00000000U);
+#endif
 }
 
 #if (RCAR_LSI == RCAR_AUTO) || (RCAR_LSI == RCAR_H3) || (RCAR_LSI == RCAR_H3N)
@@ -312,6 +327,58 @@ static void bl2_system_cpg_init_v3h(void)
 }
 #endif
 
+#if RCAR_LSI == RCAR_V3U
+static void bl2_realtime_cpg_init_v3u(void)
+{
+}
+
+static void bl2_system_cpg_init_v3u(void)
+{
+	/* CPG (SYSTEM) registers */
+
+	/* System Module Stop Control Register 0 */
+	cpg_write(MSTPCR0,	0x003F7FFEU);
+	/* System Module Stop Control Register 1 */
+	cpg_write(MSTPCR1,	0x00CB0000U);
+	/* System Module Stop Control Register 2 */
+	cpg_write(MSTPCR2,	0x0001F800U);
+	/* System Module Stop Control Register 3 */
+	cpg_write(MSTPCR3,	0x90000000U);
+	/* System Module Stop Control Register 4 */
+	cpg_write(MSTPCR4,	0x0001C807U);
+	/* System Module Stop Control Register 5 */
+	cpg_write(MSTPCR5,	0x7E03C380U);
+	/* System Module Stop Control Register 6 */
+	cpg_write(MSTPCR6,	0x1F01F001U);
+	/* System Module Stop Control Register 7 */
+	cpg_write(MSTPCR7,	0xFFFFE040U);
+	/* System Module Stop Control Register 8 */
+	cpg_write(MSTPCR8,	0xFFFFFFFFU);
+	/* System Module Stop Control Register 9 */
+	cpg_write(MSTPCR9,	0x00003C78U);
+	/* System Module Stop Control Register 10 */
+	cpg_write(MSTPCR10,	0xF0000000U);
+	/* System Module Stop Control Register 11 */
+	cpg_write(MSTPCR11,	0x0000000FU);
+	/* System Module Stop Control Register 12 */
+	cpg_write(MSTPCR12,	0xBE800000U);
+	/* System Module Stop Control Register 13 */
+	cpg_write(MSTPCR14,	0x00000037U);
+	/* System Module Stop Control Register 14 */
+	cpg_write(MSTPCR11,	0x00000000U);
+}
+#endif /* RCAR_LSI == RCAR_V3U */
+
+static void bl2_cpg_unlock(void)
+{
+	if ((mmio_read_32(CPG_CPGWPCR) & CPGWPCR_WPE) != CPGWPCR_WPE_VALID) {
+		cpg_write(CPG_CPGWPCR, CPGWPCR_PASSWORD);
+
+		/* bit in WPE = 0? */
+		while ((mmio_read_32(CPG_CPGWPCR) & CPGWPCR_WPE) != CPGWPCR_WPE_VALID);
+        }
+}
+
 #if (RCAR_LSI == RCAR_AUTO) || (RCAR_LSI == RCAR_E3)
 static void bl2_realtime_cpg_init_e3(void)
 {
@@ -390,6 +457,9 @@ void bl2_cpg_init(void)
 #if RCAR_LSI == RCAR_AUTO
 	uint32_t product = mmio_read_32(RCAR_PRR) & PRR_PRODUCT_MASK;
 #endif
+	/* Release CPG write protect */
+	bl2_cpg_unlock();
+
 	bl2_secure_cpg_init();
 
 	if (boot_cpu == MODEMR_BOOT_CPU_CA57 ||
@@ -432,6 +502,8 @@ void bl2_cpg_init(void)
 		bl2_realtime_cpg_init_v3m();
 #elif RCAR_LSI == RCAR_V3H
 		bl2_realtime_cpg_init_v3h();
+#elif RCAR_LSI == RCAR_V3U
+		bl2_realtime_cpg_init_v3u();
 #elif RCAR_LSI == RCAR_E3
 		bl2_realtime_cpg_init_e3();
 #elif RCAR_LSI == RCAR_D3
@@ -483,6 +555,8 @@ void bl2_system_cpg_init(void)
 	bl2_system_cpg_init_v3m();
 #elif RCAR_LSI == RCAR_V3H
 	bl2_system_cpg_init_v3h();
+#elif RCAR_LSI == RCAR_V3U
+	bl2_system_cpg_init_v3u();
 #elif RCAR_LSI == RCAR_E3
 	bl2_system_cpg_init_e3();
 #elif RCAR_LSI == RCAR_D3
diff --git a/plat/renesas/rcar/bl2_plat_setup.c b/plat/renesas/rcar/bl2_plat_setup.c
index 443c194..ca864f9 100644
--- a/plat/renesas/rcar/bl2_plat_setup.c
+++ b/plat/renesas/rcar/bl2_plat_setup.c
@@ -87,6 +87,9 @@ static void bl2_init_generic_timer(void);
 #elif RCAR_LSI == RCAR_V3H
 #define TARGET_PRODUCT			PRR_PRODUCT_V3H
 #define TARGET_NAME			"R-Car V3H"
+#elif RCAR_LSI == RCAR_V3U
+#define TARGET_PRODUCT			PRR_PRODUCT_V3U
+#define TARGET_NAME			"R-Car V3U"
 #elif RCAR_LSI == RCAR_E3
 #define TARGET_PRODUCT			PRR_PRODUCT_E3
 #define TARGET_NAME			"R-Car E3"
@@ -489,6 +492,10 @@ static void bl2_populate_compatible_string(void *dt)
 		ret = fdt_setprop_string(dt, 0, "compatible",
 					 "renesas,condor");
 		break;
+	case BOARD_FALCON:
+		ret = fdt_setprop_string(dt, 0, "compatible",
+					 "renesas,falcon");
+		break;
 	case BOARD_EBISU:
 	case BOARD_EBISU_4D:
 		ret = fdt_setprop_string(dt, 0, "compatible",
@@ -530,6 +537,10 @@ static void bl2_populate_compatible_string(void *dt)
 		ret = fdt_appendprop_string(dt, 0, "compatible",
 					    "renesas,r8a77980");
 		break;
+	case PRR_PRODUCT_V3U:
+		ret = fdt_appendprop_string(dt, 0, "compatible",
+					    "renesas,r8a779a0");
+		break;
 	case PRR_PRODUCT_E3:
 		ret = fdt_appendprop_string(dt, 0, "compatible",
 					    "renesas,r8a77990");
@@ -676,6 +687,14 @@ static void bl2_advertise_dram_size(uint32_t product)
 		dram_config[1] = 0x80000000ULL;
 		break;
 
+	case PRR_PRODUCT_V3U:
+		/* 8GB */
+		dram_config[1] = 0x80000000ULL;
+		dram_config[3] = 0x80000000ULL;
+		dram_config[5] = 0x80000000ULL;
+		dram_config[7] = 0x80000000ULL;
+		break;
+
 	case PRR_PRODUCT_E3:
 #if (RCAR_DRAM_DDR3L_MEMCONF == 0)
 		/* 1GB(512MBx2) */
@@ -706,6 +725,7 @@ void bl2_el3_early_platform_setup(u_register_t arg1, u_register_t arg2,
 	int32_t ret;
 	const char *str;
 	const char *unknown = "unknown";
+	const char *cpu_ca76 = "CA76";
 	const char *cpu_ca57 = "CA57";
 	const char *cpu_ca53 = "CA53";
 	const char *product_m3n = "M3N";
@@ -715,6 +735,7 @@ void bl2_el3_early_platform_setup(u_register_t arg1, u_register_t arg2,
 	const char *product_d3 = "D3";
 	const char *product_v3m = "V3M";
 	const char *product_v3h = "V3H";
+	const char *product_v3u = "V3U";
 	const char *lcs_secure = "SE";
 	const char *lcs_cm = "CM";
 	const char *lcs_dm = "DM";
@@ -762,6 +783,9 @@ void bl2_el3_early_platform_setup(u_register_t arg1, u_register_t arg2,
 	reg = read_midr();
 	midr = reg & (MIDR_PN_MASK << MIDR_PN_SHIFT);
 	switch (midr) {
+	case MIDR_CA76:
+		str = cpu_ca76;
+		break;
 	case MIDR_CA57:
 		str = cpu_ca57;
 		break;
@@ -796,6 +820,9 @@ void bl2_el3_early_platform_setup(u_register_t arg1, u_register_t arg2,
 	case PRR_PRODUCT_V3H:
 		str = product_v3h;
 		break;
+	case PRR_PRODUCT_V3U:
+		str = product_v3u;
+		break;
 	case PRR_PRODUCT_E3:
 		str = product_e3;
 		break;
@@ -845,6 +872,7 @@ void bl2_el3_early_platform_setup(u_register_t arg1, u_register_t arg2,
 	case BOARD_DRAAK:
 	case BOARD_EAGLE:
 	case BOARD_CONDOR:
+	case BOARD_FALCON:
 		break;
 	default:
 		type = BOARD_UNKNOWN;
@@ -1067,6 +1095,8 @@ static void bl2_init_generic_timer(void)
 	uint32_t reg_cntfid = EXTAL_DRAAK;
 #elif RCAR_LSI == RCAR_E3
 	uint32_t reg_cntfid = EXTAL_EBISU;
+#elif RCAR_LSI == RCAR_V3U
+	uint32_t reg_cntfid = 16666600U;
 #else /* RCAR_LSI == RCAR_E3 */
 	uint32_t reg;
 	uint32_t reg_cntfid;
diff --git a/plat/renesas/rcar/bl31_plat_setup.c b/plat/renesas/rcar/bl31_plat_setup.c
index c1ec987..9bf2646 100644
--- a/plat/renesas/rcar/bl31_plat_setup.c
+++ b/plat/renesas/rcar/bl31_plat_setup.c
@@ -83,7 +83,8 @@ void bl31_early_platform_setup2(u_register_t arg0, u_register_t arg1,
 
 	NOTICE("BL3-1 : Rev.%s\n", version_of_renesas);
 
-#if RCAR_LSI != RCAR_D3
+/* cci causes inner-shareable cache/tlb issues on V3U */
+#if (RCAR_LSI != RCAR_D3) && (RCAR_LSI != RCAR_V3U)
 	if (RCAR_CLUSTER_A53A57 == rcar_pwrc_get_cluster()) {
 		plat_cci_init();
 		plat_cci_enable();
diff --git a/plat/renesas/rcar/include/platform_def.h b/plat/renesas/rcar/include/platform_def.h
index 86d2b2f..755b176 100644
--- a/plat/renesas/rcar/include/platform_def.h
+++ b/plat/renesas/rcar/include/platform_def.h
@@ -112,12 +112,20 @@
 #define BL2_BASE			U(0xE6344000)
 #define BL2_LIMIT			U(0xE6360000)
 #define BL2_IMAGE_LIMIT			U(0xE636E800)
+#elif (RCAR_LSI == RCAR_V3U)
+#define BL2_BASE			U(0x46400000)
+#define BL2_LIMIT			(BL2_BASE + U(0x80000))
+#define BL2_IMAGE_LIMIT			(BL2_BASE + U(0x40000))
 #else
 #define BL2_BASE			U(0xE6304000)
 #define BL2_LIMIT			U(0xE6360000)
 #define BL2_IMAGE_LIMIT			U(0xE632E800)
 #endif
+#if (RCAR_LSI == RCAR_V3U)
+#define RCAR_SYSRAM_SIZE		U(0x40000)
+#else
 #define RCAR_SYSRAM_SIZE		(BL2_BASE - RCAR_SYSRAM_BASE)
+#endif
 
 /*******************************************************************************
  * BL31 specific defines.
@@ -153,9 +161,9 @@
 #if IMAGE_BL1
 #define MAX_XLAT_TABLES		U(2)
 #elif IMAGE_BL2
-#define MAX_XLAT_TABLES		U(5)
+#define MAX_XLAT_TABLES		U(8)
 #elif IMAGE_BL31
-#define MAX_XLAT_TABLES		U(4)
+#define MAX_XLAT_TABLES		U(8)
 #elif IMAGE_BL32
 #define MAX_XLAT_TABLES		U(3)
 #endif
diff --git a/plat/renesas/rcar/include/rcar_def.h b/plat/renesas/rcar/include/rcar_def.h
index 81a0926..6f5343c 100644
--- a/plat/renesas/rcar/include/rcar_def.h
+++ b/plat/renesas/rcar/include/rcar_def.h
@@ -168,6 +168,7 @@
 #define PRR_PRODUCT_V3H			0x00005600U	/* R-Car V3H */
 #define PRR_PRODUCT_E3			0x00005700U	/* R-Car E3 */
 #define PRR_PRODUCT_D3			0x00005800U	/* R-Car D3 */
+#define PRR_PRODUCT_V3U			0x00005900U	/* R-Car V3U */
 #define PRR_PRODUCT_10			0x00U		/* Ver.1.0 */
 #define PRR_PRODUCT_11			0x01U		/* Ver.1.1 */
 #define PRR_PRODUCT_20			0x10U		/* Ver.2.0 */
@@ -209,6 +210,9 @@
 #define	EXTAL_SALVATOR_XS		U(8320000)	/* Salvator-XS */
 #define EXTAL_EBISU			U(24000000)	/* Ebisu */
 #define EXTAL_DRAAK			U(24000000)	/* Draak */
+/* CPG write protection */
+#define	CPGWPCR_WPE			U(1 << 0)
+#define	CPGWPCR_WPE_VALID		U(0x0)
 /* CPG write protect registers 	*/
 #define	CPGWPR_PASSWORD			(0x5A5AFFFFU)
 #define	CPGWPCR_PASSWORD		(0xA5A50000U)
@@ -219,11 +223,22 @@
 #define	CPG_PLL0CR			(CPG_BASE + 0x00D8U)
 #define	CPG_PLL2CR			(CPG_BASE + 0x002CU)
 #define	CPG_PLL4CR			(CPG_BASE + 0x01F4U)
-#define CPG_CPGWPCR			(CPG_BASE + 0x0904U)
 /* RST Registers */
 #define	RST_BASE			(0xE6160000U)
-#define	RST_WDTRSTCR			(RST_BASE + 0x0054U)
+#if RCAR_LSI == RCAR_V3U
+#define	RST_WDTRSTCR			(RST_BASE + 0x0010U)
+/* Mode pin             */
+#define	RCAR_MODEMR			(RST_BASE + 0x0000U)
+#define	RCAR_MODEMR1			(RST_BASE + 0x0004U)
+#define RST_MODEMR			(RST_BASE + 0x0000U)
+#define	RST_MODEMR1			(RST_BASE + 0x0004U)
+#else
+/* Mode pin             */
+#define	RCAR_MODEMR			(RST_BASE + 0x0060U)
 #define RST_MODEMR			(RST_BASE + 0x0060U)
+#define	RST_WDTRSTCR			(RST_BASE + 0x0054U)
+#endif
+
 #define	WDTRSTCR_PASSWORD		(0xA55A0000U)
 #define	WDTRSTCR_RWDT_RSTMSK		((uint32_t)1U << 0U)
 /* MFIS Registers */
@@ -266,6 +281,7 @@
 /* MIDR */
 #define MIDR_CA57			(0x0D07U << MIDR_PN_SHIFT)
 #define MIDR_CA53			(0x0D03U << MIDR_PN_SHIFT)
+#define MIDR_CA76			(0x0D0BU << MIDR_PN_SHIFT)
 /* for SuspendToRAM */
 #define GPIO_BASE			(0xE6050000U)
 #define GPIO_INDT1			(GPIO_BASE + 0x100CU)
diff --git a/plat/renesas/rcar/include/registers/cpg_registers.h b/plat/renesas/rcar/include/registers/cpg_registers.h
index 583e776..58e67e4 100644
--- a/plat/renesas/rcar/include/registers/cpg_registers.h
+++ b/plat/renesas/rcar/include/registers/cpg_registers.h
@@ -10,6 +10,54 @@
 /* CPG base address */
 #define	CPG_BASE	(0xE6150000U)
 
+#if RCAR_LSI == RCAR_V3U
+/* V3U CPG registers */
+
+/* CPG write protect */
+#define CPG_CPGWPR	(CPG_BASE + 0x0000U)
+/* CPG write protect control */
+#define CPG_CPGWPCR	(CPG_BASE + 0x0004U)
+/* CPG system module stop control 6 */
+#define CPG_SMSTPCR6	(CPG_BASE + 0x2D18U)
+/* CPG system module stop status 6 */
+#define CPG_MSTPSR6	(CPG_BASE + 0x2E18U)
+/* CPG system module stop control 7 */
+#define CPG_SMSTPCR7	(CPG_BASE + 0x2D1CU)
+/* CPG system module stop status 7 */
+#define CPG_MSTPSR7	(CPG_BASE + 0x2E1CU)
+
+/* Module Stop Control Register 0 */
+#define	MSTPCR0		(CPG_BASE + 0x2D00U)
+/* System Module Stop Control Register 1 */
+#define	MSTPCR1		(CPG_BASE + 0x2D04U)
+/* System Module Stop Control Register 2 */
+#define	MSTPCR2		(CPG_BASE + 0x2D08U)
+/* System Module Stop Control Register 3 */
+#define	MSTPCR3		(CPG_BASE + 0x2D0CU)
+/* System Module Stop Control Register 4 */
+#define	MSTPCR4		(CPG_BASE + 0x2D10U)
+/* System Module Stop Control Register 5 */
+#define	MSTPCR5		(CPG_BASE + 0x2D14U)
+/* System Module Stop Control Register 6 */
+#define	MSTPCR6		(CPG_BASE + 0x2D18U)
+/* System Module Stop Control Register 7 */
+#define	MSTPCR7		(CPG_BASE + 0x2D1CU)
+/* System Module Stop Control Register 8 */
+#define	MSTPCR8		(CPG_BASE + 0x2D20U)
+/* System Module Stop Control Register 9 */
+#define	MSTPCR9		(CPG_BASE + 0x2D24U)
+/* System Module Stop Control Register 10 */
+#define	MSTPCR10	(CPG_BASE + 0x2D28U)
+/* System Module Stop Control Register 11 */
+#define	MSTPCR11	(CPG_BASE + 0x2D2CU)
+/* System Module Stop Control Register 12 */
+#define	MSTPCR12	(CPG_BASE + 0x2D30U)
+/* System Module Stop Control Register 13 */
+#define	MSTPCR13	(CPG_BASE + 0x2D34U)
+/* System Module Stop Control Register 14 */
+#define	MSTPCR14	(CPG_BASE + 0x2D38U)
+#else
+
 /* CPG system module stop control 2 */
 #define CPG_SMSTPCR2	(CPG_BASE + 0x0138U)
 /* CPG software reset 2 */
@@ -138,5 +186,6 @@
 #define	SMSTPCR10	(CPG_BASE + 0x0998U)
 /* System Module Stop Control Register 11 */
 #define	SMSTPCR11	(CPG_BASE + 0x099CU)
+#endif
 
 #endif /* CPG_REGISTERS_H */
diff --git a/plat/renesas/rcar/plat_pm.c b/plat/renesas/rcar/plat_pm.c
index 6fc47b9..3acb189 100644
--- a/plat/renesas/rcar/plat_pm.c
+++ b/plat/renesas/rcar/plat_pm.c
@@ -95,7 +95,9 @@ static void rcar_pwr_domain_off(const psci_power_state_t *target_state)
 #endif
 	unsigned long mpidr = read_mpidr_el1();
 
+#if RCAR_LSI != RCAR_V3U
 	gicv2_cpuif_disable();
+#endif
 	rcar_pwrc_cpuoff(mpidr);
 
 #if RCAR_LSI != RCAR_D3
@@ -118,7 +120,9 @@ static void rcar_pwr_domain_suspend(const psci_power_state_t *target_state)
 
 	rcar_program_mailbox(mpidr, rcar_sec_entrypoint);
 	rcar_pwrc_enable_interrupt_wakeup(mpidr);
+#if RCAR_LSI != RCAR_V3U
 	gicv2_cpuif_disable();
+#endif
 	rcar_pwrc_cpuoff(mpidr);
 
 	if (CLUSTER_PWR_STATE(target_state) == PLAT_MAX_OFF_STATE) {
diff --git a/plat/renesas/rcar/platform.mk b/plat/renesas/rcar/platform.mk
index 74d0313..68891bd 100644
--- a/plat/renesas/rcar/platform.mk
+++ b/plat/renesas/rcar/platform.mk
@@ -34,6 +34,7 @@ RCAR_H3N:=4
 RCAR_D3:=5
 RCAR_V3M:=6
 RCAR_V3H:=7
+RCAR_V3U:=8
 RCAR_AUTO:=99
 $(eval $(call add_define,RCAR_H3))
 $(eval $(call add_define,RCAR_M3))
@@ -43,6 +44,7 @@ $(eval $(call add_define,RCAR_H3N))
 $(eval $(call add_define,RCAR_D3))
 $(eval $(call add_define,RCAR_V3M))
 $(eval $(call add_define,RCAR_V3H))
+$(eval $(call add_define,RCAR_V3U))
 $(eval $(call add_define,RCAR_AUTO))
 RCAR_CUT_10:=0
 RCAR_CUT_11:=1
@@ -198,6 +200,22 @@ else
       endif
       $(eval $(call add_define,RCAR_LSI_CUT))
     endif
+  else ifeq (${LSI},V3U)
+    RCAR_LSI:=${RCAR_V3U}
+    ifndef LSI_CUT
+      # enable compatible function.
+      RCAR_LSI_CUT_COMPAT := 1
+      $(eval $(call add_define,RCAR_LSI_CUT_COMPAT))
+    else
+      # disable compatible function.
+      ifeq (${LSI_CUT},10)
+        RCAR_LSI_CUT:=0
+      endif
+      ifeq (${LSI_CUT},20)
+        RCAR_LSI_CUT:=10
+      endif
+      $(eval $(call add_define,RCAR_LSI_CUT))
+    endif
   else
     $(error "Error: ${LSI} is not supported.")
   endif
@@ -364,6 +382,21 @@ ifeq (${RCAR_SYSTEM_RESET_KEEPON_DDR},1)
   endif
 endif
 
+ifeq (${RCAR_LSI},${RCAR_V3U})
+# Enable workarounds for selected Cortex-A76 errata.
+DYNAMIC_WORKAROUND_CVE_2018_3639 := 1
+ERRATA_A76_1073348  :=1
+ERRATA_A76_1130799  :=1
+ERRATA_A76_1220197  :=1
+ERRATA_A76_1257314  :=1
+ERRATA_A76_1262606  :=1
+ERRATA_A76_1262888  :=1
+ERRATA_A76_1275112  :=1
+ERRATA_A76_1286807  :=1
+
+USE_COHERENT_MEM := 0
+HW_ASSISTED_COHERENCY := 1
+else
 # Enable workarounds for selected Cortex-A53 erratas.
 ERRATA_A53_835769  := 1
 ERRATA_A53_843419  := 1
@@ -372,6 +405,7 @@ ERRATA_A53_855873  := 1
 # Enable workarounds for selected Cortex-A57 erratas.
 ERRATA_A57_859972  := 1
 ERRATA_A57_813419  := 1
+endif
 
 include drivers/renesas/rcar/ddr/ddr.mk
 include drivers/renesas/rcar/qos/qos.mk
@@ -394,8 +428,7 @@ PLAT_INCLUDES	:=	-Idrivers/renesas/rcar/ddr		\
 			-Iplat/renesas/rcar/include		\
 			-Iplat/renesas/rcar
 
-PLAT_BL_COMMON_SOURCES	:=	drivers/renesas/rcar/iic_dvfs/iic_dvfs.c \
-				plat/renesas/rcar/rcar_common.c
+PLAT_BL_COMMON_SOURCES	:= plat/renesas/rcar/rcar_common.c
 
 ifneq (${ENABLE_STACK_PROTECTOR},0)
 BL_COMMON_SOURCES	+=	plat/renesas/rcar/rcar_stack_protector.c
@@ -408,8 +441,6 @@ RCAR_GIC_SOURCES	:=	drivers/arm/gic/common/gic_common.c	\
 				plat/common/plat_gicv2.c
 
 BL2_SOURCES	+=	${RCAR_GIC_SOURCES}				\
-			lib/cpus/aarch64/cortex_a53.S			\
-			lib/cpus/aarch64/cortex_a57.S			\
 			${LIBFDT_SRCS}					\
 			common/desc_image_load.c			\
 			plat/renesas/rcar/aarch64/platform_common.c	\
@@ -444,8 +475,6 @@ BL2_SOURCES	+=	${RCAR_GIC_SOURCES}				\
 			drivers/io/io_storage.c
 
 BL31_SOURCES	+=	${RCAR_GIC_SOURCES}				\
-			lib/cpus/aarch64/cortex_a53.S			\
-			lib/cpus/aarch64/cortex_a57.S			\
 			plat/common/plat_psci_common.c			\
 			plat/renesas/rcar/plat_topology.c		\
 			plat/renesas/rcar/aarch64/plat_helpers.S	\
@@ -462,6 +491,19 @@ BL31_SOURCES	+=	${RCAR_GIC_SOURCES}				\
 			drivers/renesas/rcar/common.c			\
 			drivers/arm/cci/cci.c
 
+
+ifeq (${RCAR_LSI},${RCAR_V3U})
+BL2_SOURCES +=	lib/cpus/aarch64/cortex_a76.S
+BL31_SOURCES +=	lib/cpus/aarch64/cortex_a76.S
+else
+BL2_SOURCES +=	lib/cpus/aarch64/cortex_a53.S			\
+		lib/cpus/aarch64/cortex_a57.S
+BL31_SOURCES +=	lib/cpus/aarch64/cortex_a53.S			\
+		lib/cpus/aarch64/cortex_a57.S
+
+PLAT_BL_COMMON_SOURCES += drivers/renesas/rcar/iic_dvfs/iic_dvfs.c
+endif
+
 ifeq (${RCAR_GEN3_ULCB},1)
 BL31_SOURCES		+=	drivers/renesas/rcar/cpld/ulcb_cpld.c
 endif
diff --git a/plat/renesas/rcar/rcar_common.c b/plat/renesas/rcar/rcar_common.c
index 3d3418d..e99df9b 100644
--- a/plat/renesas/rcar/rcar_common.c
+++ b/plat/renesas/rcar/rcar_common.c
@@ -14,8 +14,15 @@
 #include <lib/mmio.h>
 #include <cpg_registers.h>
 
-#define MSTP318			(1 << 18)
-#define MSTP319			(1 << 19)
+#if RCAR_LSI == RCAR_V3U
+#define PCIE_CPG_SREG			CPG_MSTPSR6
+#define PCIE0_CPG_BIT			(1 << 24)
+#define PCIE1_CPG_BIT			(1 << 25)
+#else
+#define PCIE_CPG_SREG			CPG_MSTPSR3
+#define PCIE0_CPG_BIT			(1 << 19)
+#define PCIE1_CPG_BIT			(1 << 18)
+#endif
 #define PMSR			0x5c
 #define PMSR_L1FAEG		(1U << 31)
 #define PMSR_PMEL1RX		(1 << 23)
@@ -30,8 +37,8 @@ static int rcar_pcie_fixup(unsigned int controller)
 	int ret = 0;
 
 	/* Test if PCIECx is enabled */
-	cpg = mmio_read_32(CPG_MSTPSR3);
-	if (cpg & (MSTP318 << !controller))
+	cpg = mmio_read_32(PCIE_CPG_SREG);
+	if (cpg & (PCIE1_CPG_BIT << !controller))
 		return ret;
 
 	pmsr = mmio_read_32(addr + PMSR);
-- 
2.7.4

