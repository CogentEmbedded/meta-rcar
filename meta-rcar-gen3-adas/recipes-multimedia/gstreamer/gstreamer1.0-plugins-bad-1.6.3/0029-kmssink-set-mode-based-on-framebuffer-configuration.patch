From 02a71e02163d8ea48faa89934a7d5819c624cdcb Mon Sep 17 00:00:00 2001
From: Michael Tretter <m.tretter@pengutronix.de>
Date: Tue, 8 Nov 2016 15:26:40 +0100
Subject: [PATCH 29/80] kmssink: set mode based on framebuffer configuration

Displays usually support multiple modes. Therefore, the kmssink should
not only support the preferred mode, but any mode that is supported by
the display.

https://bugzilla.gnome.org/show_bug.cgi?id=773473
---
 sys/kms/gstkmssink.c | 34 +++++++++++++++++++++++++++++++++-
 1 file changed, 33 insertions(+), 1 deletion(-)

diff --git a/sys/kms/gstkmssink.c b/sys/kms/gstkmssink.c
index 548a08893..ed8c52b72 100644
--- a/sys/kms/gstkmssink.c
+++ b/sys/kms/gstkmssink.c
@@ -325,9 +325,14 @@ configure_mode_setting (GstKMSSink * self, guint32 fb_id)
   gboolean ret;
   drmModeConnector *conn;
   int err;
+  drmModeFB *fb;
+  gint i;
+  drmModeModeInfo *mode;
 
   ret = FALSE;
   conn = NULL;
+  fb = NULL;
+  mode = NULL;
 
   if (self->conn_id < 0)
     goto bail;
@@ -338,14 +343,30 @@ configure_mode_setting (GstKMSSink * self, guint32 fb_id)
   if (!conn)
     goto connector_failed;
 
+  fb = drmModeGetFB (self->fd, fb_id);
+  if (!fb)
+    goto framebuffer_failed;
+
+  for (i = 0; i < conn->count_modes; i++) {
+    if (conn->modes[i].vdisplay == fb->height &&
+        conn->modes[i].hdisplay == fb->width) {
+      mode = &conn->modes[i];
+      break;
+    }
+  }
+  if (!mode)
+    goto mode_failed;
+
   err = drmModeSetCrtc (self->fd, self->crtc_id, fb_id, 0, 0,
-      (uint32_t *) & self->conn_id, 1, &conn->modes[0]);
+      (uint32_t *) & self->conn_id, 1, mode);
   if (err)
     goto modesetting_failed;
 
   ret = TRUE;
 
 bail:
+  if (fb)
+    drmModeFreeFB (fb);
   if (conn)
     drmModeFreeConnector (conn);
 
@@ -357,6 +378,17 @@ connector_failed:
     GST_ERROR_OBJECT (self, "Could not find a valid monitor connector");
     goto bail;
   }
+framebuffer_failed:
+  {
+    GST_ERROR_OBJECT (self, "drmModeGetFB failed: %s (%d)",
+        strerror (errno), errno);
+    goto bail;
+  }
+mode_failed:
+  {
+    GST_ERROR_OBJECT (self, "cannot find appropriate mode");
+    goto bail;
+  }
 modesetting_failed:
   {
     GST_ERROR_OBJECT (self, "Failed to set mode: %s", strerror (errno));
-- 
2.11.0

