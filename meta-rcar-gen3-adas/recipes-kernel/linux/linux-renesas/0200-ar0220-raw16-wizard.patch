From 2a00754028e6778535fd83484030499a857bb4ec Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date: Sat, 10 Mar 2018 09:40:16 +0300
Subject: [PATCH] ar0220 raw16 wizard

---
 drivers/media/i2c/soc_camera/ar0220.c       |   2 +-
 drivers/media/i2c/soc_camera/ar0220_raw16.h | 260 ++++++++++++++++++++++++++++
 2 files changed, 261 insertions(+), 1 deletion(-)
 create mode 100644 drivers/media/i2c/soc_camera/ar0220_raw16.h

diff --git a/drivers/media/i2c/soc_camera/ar0220.c b/drivers/media/i2c/soc_camera/ar0220.c
index 16beeff..61de353 100644
--- a/drivers/media/i2c/soc_camera/ar0220.c
+++ b/drivers/media/i2c/soc_camera/ar0220.c
@@ -20,7 +20,7 @@
 #include <media/v4l2-ctrls.h>
 #include <media/v4l2-of.h>
 
-#include "ar0220.h"
+#include "ar0220_raw16.h"
 
 #define AR0220_I2C_ADDR		0x10
 //#define AR0220_I2C_ADDR		0x54 // eeprom
diff --git a/drivers/media/i2c/soc_camera/ar0220_raw16.h b/drivers/media/i2c/soc_camera/ar0220_raw16.h
new file mode 100644
index 0000000..14c4f9f
--- /dev/null
+++ b/drivers/media/i2c/soc_camera/ar0220_raw16.h
@@ -0,0 +1,260 @@
+/*
+ * ON Semiconductor AR0220 sensor camera wizard 1820x940@44/RCCB/MIPI
+ *
+ * Copyright (C) 2018 Cogent Embedded, Inc.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+//#define AR0220_DISPLAY_PATTERN_FIXED
+//#define AR0220_DISPLAY_PATTERN_COLOR_BAR
+
+#define AR0220_MAX_WIDTH	3648 // (1820*2=3640) <- must be multiple of 16 - requred by R-CAR VIN
+#define AR0220_MAX_HEIGHT	944
+#define AR0220_VC		(1 << 8)
+
+#define AR0220_DELAY		0xffff
+
+struct ar0220_reg {
+	u16	reg;
+	u16	val;
+};
+
+/* HAGL wizard: HAGL_AR0220_RAW16_1820x940+4_44fps_init.txt */
+static const struct ar0220_reg ar0220_regs_wizard[] = {
+{0x301A, 0x0018}, // RESET_REGISTER
+{AR0220_DELAY, 500}, // Wait 500ms
+{0x3070, 0x0000}, //  1: Solid color test pattern,
+		  //  2: Full color bar test pattern,
+		  //  3: Fade to grey color bar test pattern,
+		  //256: Walking 1 test pattern (12 bit)
+{0x3072, 0x0123}, // R
+{0x3074, 0x0456}, // G(GR row)
+{0x3076, 0x0abc}, // B
+{0x3078, 0x0def}, // G(GB row)
+#ifdef AR0220_DISPLAY_PATTERN_FIXED
+{0x3070, 0x0001},
+#endif
+#ifdef AR0220_DISPLAY_PATTERN_COLOR_BAR
+{0x3070, 0x0002},
+#endif
+{AR0220_DELAY, 100}, // Wait 100ms
+{0x3092, 0x0824}, // ROW_NOISE_CONTROL
+{0x3096, 0x227C}, // RESERVED_MFR_3096
+{0x3098, 0x227C}, // RESERVED_MFR_3098
+{0x3750, 0x227C}, // RESERVED_MFR_3750
+{0x3752, 0x227C}, // RESERVED_MFR_3752
+{0x351C, 0x00B3}, // RESERVED_MFR_351C
+{0x3364, 0x00AC}, // RESERVED_MFR_3364
+{0x337A, 0x0BB8}, // DBLC_SCALE0
+{0x3110, 0x0011}, // HDR_CONTROL0
+{0x3100, 0xC000}, // DLO_CONTROL0 quadratic noise, new in AR0220
+{0x3102, 0x5040}, // DLO_CONTROL1 -> range 32-64
+{0x3104, 0x5040}, // DLO_CONTROL2 -> range 32-64
+{0x3106, 0x5040}, // DLO_CONTROL3 -> range 32-64
+{0x3108, 0x0E74}, // noise clipping barrier. Set to lowest barrier
+{0x32EC, 0x7262}, // RESERVED_MFR_32EC
+{0x350E, 0x0F14}, // RESERVED_MFR_350E
+{0x3520, 0x1288}, // RESERVED_MFR_3520
+{0x3522, 0x86C0}, // RESERVED_MFR_3522
+{0x3524, 0x0C12}, // RESERVED_MFR_3524
+{0x352C, 0x0012}, // RESERVED_MFR_352C
+{0x3532, 0x826C}, // RESERVED_MFR_3532
+{0x353A, 0x9000}, // RESERVED_MFR_353A
+{0x3540, 0xC63C}, // RESERVED_MFR_3540
+{0x3542, 0x4637}, // RESERVED_MFR_3542
+{0x3544, 0x3750}, // RESERVED_MFR_3544
+{0x3546, 0x5656}, // RESERVED_MFR_3546
+{0x3548, 0x5600}, // RESERVED_MFR_3548
+{0x3566, 0xBF38}, // RESERVED_MFR_3566
+{0x30BA, 0x1113}, // DIGITAL_CTRL
+{0x301A, 0x0018}, // RESET_REGISTER
+{AR0220_DELAY, 200}, // Wait 200ms
+{0x2512, 0x8000}, // SEQ_CTRL_PORT
+{0x2510, 0x0905}, // SEQ_DATA_PORT
+{0x2510, 0x3350}, // SEQ_DATA_PORT
+{0x2510, 0x2004}, // SEQ_DATA_PORT
+{0x2510, 0x1460}, // SEQ_DATA_PORT
+{0x2510, 0x1578}, // SEQ_DATA_PORT
+{0x2510, 0x1360}, // SEQ_DATA_PORT
+{0x2510, 0x7B24}, // SEQ_DATA_PORT
+{0x2510, 0xFF24}, // SEQ_DATA_PORT
+{0x2510, 0xFF24}, // SEQ_DATA_PORT
+{0x2510, 0xEA24}, // SEQ_DATA_PORT
+{0x2510, 0x1022}, // SEQ_DATA_PORT
+{0x2510, 0x2410}, // SEQ_DATA_PORT
+{0x2510, 0x155A}, // SEQ_DATA_PORT
+{0x2510, 0x1342}, // SEQ_DATA_PORT
+{0x2510, 0x1440}, // SEQ_DATA_PORT
+{0x2510, 0x24FF}, // SEQ_DATA_PORT
+{0x2510, 0x24FF}, // SEQ_DATA_PORT
+{0x2510, 0x24EA}, // SEQ_DATA_PORT
+{0x2510, 0x2324}, // SEQ_DATA_PORT
+{0x2510, 0x647A}, // SEQ_DATA_PORT
+{0x2510, 0x2404}, // SEQ_DATA_PORT
+{0x2510, 0x052C}, // SEQ_DATA_PORT
+{0x2510, 0x400A}, // SEQ_DATA_PORT
+{0x2510, 0xFF0A}, // SEQ_DATA_PORT
+{0x2510, 0x850A}, // SEQ_DATA_PORT
+{0x2510, 0x0608}, // SEQ_DATA_PORT
+{0x2510, 0x3851}, // SEQ_DATA_PORT
+{0x2510, 0x0905}, // SEQ_DATA_PORT
+{0x2510, 0x15DC}, // SEQ_DATA_PORT
+{0x2510, 0x134C}, // SEQ_DATA_PORT
+{0x2510, 0x0004}, // SEQ_DATA_PORT
+{0x2510, 0x0801}, // SEQ_DATA_PORT
+{0x2510, 0x0408}, // SEQ_DATA_PORT
+{0x2510, 0x1180}, // SEQ_DATA_PORT
+{0x2510, 0x1002}, // SEQ_DATA_PORT
+{0x2510, 0x1016}, // SEQ_DATA_PORT
+{0x2510, 0x1181}, // SEQ_DATA_PORT
+{0x2510, 0x1189}, // SEQ_DATA_PORT
+{0x2510, 0x1056}, // SEQ_DATA_PORT
+{0x2510, 0x1210}, // SEQ_DATA_PORT
+{0x2510, 0x0D09}, // SEQ_DATA_PORT
+{0x2510, 0x0714}, // SEQ_DATA_PORT
+{0x2510, 0x4114}, // SEQ_DATA_PORT
+{0x2510, 0x4009}, // SEQ_DATA_PORT
+{0x2510, 0x0815}, // SEQ_DATA_PORT
+{0x2510, 0xCC13}, // SEQ_DATA_PORT
+{0x2510, 0xCC15}, // SEQ_DATA_PORT
+{0x2510, 0x8813}, // SEQ_DATA_PORT
+{0x2510, 0x8809}, // SEQ_DATA_PORT
+{0x2510, 0x1111}, // SEQ_DATA_PORT
+{0x2510, 0x9909}, // SEQ_DATA_PORT
+{0x2510, 0x0B11}, // SEQ_DATA_PORT
+{0x2510, 0xD909}, // SEQ_DATA_PORT
+{0x2510, 0x0B12}, // SEQ_DATA_PORT
+{0x2510, 0x1409}, // SEQ_DATA_PORT
+{0x2510, 0x0112}, // SEQ_DATA_PORT
+{0x2510, 0x1010}, // SEQ_DATA_PORT
+{0x2510, 0xD612}, // SEQ_DATA_PORT
+{0x2510, 0x1212}, // SEQ_DATA_PORT
+{0x2510, 0x1011}, // SEQ_DATA_PORT
+{0x2510, 0xDD11}, // SEQ_DATA_PORT
+{0x2510, 0xD910}, // SEQ_DATA_PORT
+{0x2510, 0x5609}, // SEQ_DATA_PORT
+{0x2510, 0x1111}, // SEQ_DATA_PORT
+{0x2510, 0xDB09}, // SEQ_DATA_PORT
+{0x2510, 0x1D11}, // SEQ_DATA_PORT
+{0x2510, 0xFB09}, // SEQ_DATA_PORT
+{0x2510, 0x0911}, // SEQ_DATA_PORT
+{0x2510, 0xBB12}, // SEQ_DATA_PORT
+{0x2510, 0x1A12}, // SEQ_DATA_PORT
+{0x2510, 0x1010}, // SEQ_DATA_PORT
+{0x2510, 0xD612}, // SEQ_DATA_PORT
+{0x2510, 0x5010}, // SEQ_DATA_PORT
+{0x2510, 0xF610}, // SEQ_DATA_PORT
+{0x2510, 0xE609}, // SEQ_DATA_PORT
+{0x2510, 0x0315}, // SEQ_DATA_PORT
+{0x2510, 0xAB13}, // SEQ_DATA_PORT
+{0x2510, 0xAB12}, // SEQ_DATA_PORT
+{0x2510, 0x4012}, // SEQ_DATA_PORT
+{0x2510, 0x6009}, // SEQ_DATA_PORT
+{0x2510, 0x2315}, // SEQ_DATA_PORT
+{0x2510, 0x8809}, // SEQ_DATA_PORT
+{0x2510, 0x0113}, // SEQ_DATA_PORT
+{0x2510, 0x880B}, // SEQ_DATA_PORT
+{0x2510, 0x0906}, // SEQ_DATA_PORT
+{0x2510, 0x158D}, // SEQ_DATA_PORT
+{0x2510, 0x138D}, // SEQ_DATA_PORT
+{0x2510, 0x090B}, // SEQ_DATA_PORT
+{0x2510, 0x1066}, // SEQ_DATA_PORT
+{0x2510, 0x1588}, // SEQ_DATA_PORT
+{0x2510, 0x1388}, // SEQ_DATA_PORT
+{0x2510, 0x0C09}, // SEQ_DATA_PORT
+{0x2510, 0x0410}, // SEQ_DATA_PORT
+{0x2510, 0xE612}, // SEQ_DATA_PORT
+{0x2510, 0x6212}, // SEQ_DATA_PORT
+{0x2510, 0x6011}, // SEQ_DATA_PORT
+{0x2510, 0xBF11}, // SEQ_DATA_PORT
+{0x2510, 0xFB10}, // SEQ_DATA_PORT
+{0x2510, 0x6609}, // SEQ_DATA_PORT
+{0x2510, 0x3B11}, // SEQ_DATA_PORT
+{0x2510, 0xBB12}, // SEQ_DATA_PORT
+{0x2510, 0x6312}, // SEQ_DATA_PORT
+{0x2510, 0x6009}, // SEQ_DATA_PORT
+{0x2510, 0x0115}, // SEQ_DATA_PORT
+{0x2510, 0x5A11}, // SEQ_DATA_PORT
+{0x2510, 0xB812}, // SEQ_DATA_PORT
+{0x2510, 0xA012}, // SEQ_DATA_PORT
+{0x2510, 0x0010}, // SEQ_DATA_PORT
+{0x2510, 0x2610}, // SEQ_DATA_PORT
+{0x2510, 0x0013}, // SEQ_DATA_PORT
+{0x2510, 0x0211}, // SEQ_DATA_PORT
+{0x2510, 0x8014}, // SEQ_DATA_PORT
+{0x2510, 0x007A}, // SEQ_DATA_PORT
+{0x2510, 0x0611}, // SEQ_DATA_PORT
+{0x2510, 0x0005}, // SEQ_DATA_PORT
+{0x2510, 0x0708}, // SEQ_DATA_PORT
+{0x2510, 0x4137}, // SEQ_DATA_PORT
+{0x2510, 0x502C}, // SEQ_DATA_PORT
+{0x2510, 0x2CFE}, // SEQ_DATA_PORT
+{0x2510, 0x112C}, // SEQ_DATA_PORT
+{AR0220_DELAY, 300}, // Wait 300ms
+{0x1008, 0x02B6}, // RESERVED_PARAM_1008
+{0x100C, 0x0452}, // RESERVED_PARAM_100C
+{0x100E, 0x05EE}, // RESERVED_PARAM_100E
+{0x1010, 0x011A}, // RESERVED_PARAM_1010
+{0x3230, 0x0254}, // FINE_CORRECTION
+{0x3232, 0x03F0}, // FINE_CORRECTION2
+{0x3234, 0x058C}, // FINE_CORRECTION3
+{0x3236, 0x00B8}, // FINE_CORRECTION4
+{0x32E6, 0x00BC}, // RESERVED_MFR_32E6 min_subrow should be 188
+{0x302A, 0x0008}, // VT_PIX_CLK_DIV
+{0x302C, 0x0001}, // VT_SYS_CLK_DIV
+{0x302E, 0x0009}, // PRE_PLL_CLK_DIV
+{0x3030, 0x00C8}, // PLL_MULTIPLIER
+{0x3036, 0x0008}, // OP_WORD_CLK_DIV
+{0x3038, 0x0001}, // OP_SYS_CLK_DIV
+{0x30B0, 0x0800}, // DIGITAL_TEST
+{0x30B4, 0x0007}, // TEMP_SENS0_CTRL
+{0x30B8, 0x0007}, // TEMP_SENS1_CTRL
+{0x30A2, 0x0001}, // X_ODD_INC_
+{0x30A6, 0x0001}, // Y_ODD_INC_
+{0x3004, 0x0004}, // X_ADDR_START_
+{0x3008, 0x071F}, // X_ADDR_END_
+{0x3002, 0x0004}, // Y_ADDR_START_
+{0x3006, 0x03AF}, // Y_ADDR_END_
+{0x3082, 0x000C}, // OPERATION_MODE_CTRL
+{0x30BA, 0x1113}, // DIGITAL_CTRL
+{0x3064, 0x1982}, // SMIA_TEST
+{0x3040, 0x0000}, // READ_MODE
+{0x33E0, 0x0880}, // TEST_ASIL_ROWS
+{0x3180, 0x0080}, // RESERVED_MFR_3180
+{0x306E, 0x9010}, // DATAPATH_SELECT
+{0x300C, 0x0680}, // LINE_LENGTH_PCK_
+{0x300A, 0x0400}, // FRAME_LENGTH_LINES_
+{0x3042, 0x0000}, // EXTRA_DELAY
+{0x3238, 0x0222}, // EXPOSURE_RATIO
+{0x3012, 0x0327}, // COARSE_INTEGRATION_TIME_
+{0x3014, 0x0404}, // FINE_INTEGRATION_TIME_ recommended settings by Christian Mauer (1028)
+{0x321E, 0x073C}, // FINE_INTEGRATION_TIME2 recommended settings by Christian Mauer (1852)
+{0x3222, 0x0A74}, // FINE_INTEGRATION_TIME3 recommended settings by Christian Mauer (2676)
+{0x3226, 0x011A}, // FINE_INTEGRATION_TIME4 recommended settings by Christian Mauer (282)
+{0x32EA, 0x3C0E}, // RESERVED_MFR_32EA
+{0x32EC, 0x7262}, // RESERVED_MFR_32EC
+{0x31D0, 0x0001}, // COMPANDING
+{0x31AC, 0x1410}, // DATA_FORMAT_BITS
+{0x31AE, 0x0204}, // SERIAL_FORMAT
+{0x3342, 0x122A}, // MIPI_F1_PDT_EDT
+{0x3346, 0x122A}, // MIPI_F2_PDT_EDT
+{0x334A, 0x122A}, // MIPI_F3_PDT_EDT
+{0x334E, 0x122A}, // MIPI_F4_PDT_EDT
+{0x3344, 0x0011 | AR0220_VC}, // MIPI_F1_VDT_VC
+{0x3348, 0x0111}, // MIPI_F2_VDT_VC
+{0x334C, 0x0211}, // MIPI_F3_VDT_VC
+{0x3350, 0x0311}, // MIPI_F4_VDT_VC
+{0x31B0, 0x0056}, // FRAME_PREAMBLE
+{0x31B2, 0x0045}, // LINE_PREAMBLE
+{0x31B4, 0x2207}, // RESERVED_MFR_31B4
+{0x31B6, 0x220B}, // RESERVED_MFR_31B6
+{0x31B8, 0x404B}, // RESERVED_MFR_31B8
+{0x31BA, 0x020A}, // RESERVED_MFR_31BA
+{0x31BC, 0x0C08}, // RESERVED_MFR_31BC
+{0x301A, 0x001C}, // RESET_REGISTER
+{AR0220_DELAY, 33}, // Wait 33ms
+};
-- 
1.9.1

