From fd04434e670c6d589ffe556015df4b3b5c7020f1 Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date: Wed, 9 Sep 2020 22:10:26 +0300
Subject: [PATCH] media: soc_camera: rcar_csi2: add eof notifier

This adds EOF notifiers to be used by ISP for early obtain
raw buffers

Signed-off-by: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
---
 drivers/media/platform/soc_camera/rcar_csi2.c | 37 ++++++++++++++++++++-------
 1 file changed, 28 insertions(+), 9 deletions(-)

diff --git a/drivers/media/platform/soc_camera/rcar_csi2.c b/drivers/media/platform/soc_camera/rcar_csi2.c
index 1f1beb8..424d154 100644
--- a/drivers/media/platform/soc_camera/rcar_csi2.c
+++ b/drivers/media/platform/soc_camera/rcar_csi2.c
@@ -231,8 +231,24 @@ struct rcar_csi2 {
 	atomic_t			use_count;
 	unsigned int			use_interrupts;
 	u64				timestamp[4];
+	unsigned int			id;
 };
 
+/* for notification of isp_events only for csi40, csi41 */
+struct raw_notifier_head rcar_csi2_notifier_list[2];
+
+int register_rcar_csi2_notifier(struct notifier_block *nb)
+{
+	return raw_notifier_chain_register(&rcar_csi2_notifier_list[nb->priority], nb);
+}
+EXPORT_SYMBOL(register_rcar_csi2_notifier);
+
+int unregister_rcar_csi2_notifier(struct notifier_block *nb)
+{
+	return raw_notifier_chain_unregister(&rcar_csi2_notifier_list[nb->priority], nb);
+}
+EXPORT_SYMBOL(unregister_rcar_csi2_notifier);
+
 static int dump = 0;
 module_param(dump, int, 0644);
 MODULE_PARM_DESC(dump, " Dump CSI packets (default: disabled)");
@@ -470,8 +486,6 @@ static irqreturn_t rcar_csi2_irq(int irq, void *data)
 	unsigned int handled = 0;
 	u64 ts;
 
-	spin_lock(&priv->lock);
-
 	int_status = ioread32(priv->base + RCAR_CSI2_INTSTATE);
 	if (!int_status)
 		goto done;
@@ -482,18 +496,22 @@ static irqreturn_t rcar_csi2_irq(int irq, void *data)
 	if (int_status & RCAR_CSI2_INTSTATE_VD4_END) {
 		priv->timestamp[3] = ts;
 		//printk("eof vc3\n");
+		raw_notifier_call_chain(&rcar_csi2_notifier_list[priv->id], 3, &ts);
 	}
 	if (int_status & RCAR_CSI2_INTSTATE_VD3_END) {
 		priv->timestamp[2] = ts;
 		//printk("eof vc2\n");
+		raw_notifier_call_chain(&rcar_csi2_notifier_list[priv->id], 2, &ts);
 	}
 	if (int_status & RCAR_CSI2_INTSTATE_VD2_END) {
 		priv->timestamp[1] = ts;
 		//printk("eof vc1\n");
+		raw_notifier_call_chain(&rcar_csi2_notifier_list[priv->id], 1, &ts);
 	}
 	if (int_status & RCAR_CSI2_INTSTATE_VD1_END) {
 		priv->timestamp[0] = ts;
-		//printk("eof vc0\n");
+		//printk("eof vc0 id=%d\n", priv->id);
+		raw_notifier_call_chain(&rcar_csi2_notifier_list[priv->id], 0, &ts);
 	}
 
 	/* ack interrupts */
@@ -501,8 +519,6 @@ static irqreturn_t rcar_csi2_irq(int irq, void *data)
 	handled = 1;
 
 done:
-	spin_unlock(&priv->lock);
-
 	return IRQ_RETVAL(handled);
 
 }
@@ -850,8 +866,8 @@ static int rcar_csi2_probe(struct platform_device *pdev)
 	if (IS_ERR(priv->base))
 		return PTR_ERR(priv->base);
 
-	ret = devm_request_irq(&pdev->dev, irq, rcar_csi2_irq, IRQF_SHARED,
-			       dev_name(&pdev->dev), priv);
+	ret = devm_request_threaded_irq(&pdev->dev, irq, NULL, rcar_csi2_irq, IRQF_ONESHOT,
+					dev_name(&pdev->dev), priv);
 	if (ret)
 		return ret;
 
@@ -879,13 +895,16 @@ static int rcar_csi2_probe(struct platform_device *pdev)
 			return ret;
 	}
 
-	spin_lock_init(&priv->lock);
-
 	pm_runtime_enable(&pdev->dev);
 
 	if (device_create_file(&pdev->dev, &dev_attr_dump) != 0)
 		dev_err(&pdev->dev, "sysfs dump entry creation failed\n");
 
+	if (!strncmp("/soc/csi2@feaa0000", of_node_full_name(pdev->dev.of_node), 20))
+		priv->id = 0;
+	if (!strncmp("/soc/csi2@feab0000", of_node_full_name(pdev->dev.of_node), 20))
+		priv->id = 1;
+
 	dev_dbg(&pdev->dev, "CSI2 probed.\n");
 
 	return 0;
-- 
2.7.4

