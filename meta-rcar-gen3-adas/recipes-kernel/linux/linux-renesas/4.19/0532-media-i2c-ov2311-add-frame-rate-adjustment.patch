From 1fd67c57fe45ce18e10dd5ab4134668a662bdccd Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date: Wed, 11 Nov 2020 19:44:45 +0300
Subject: [PATCH] media: i2c: ov2311: add frame rate adjustment

This add the FPS adjustment support

Signed-off-by: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
---
 drivers/media/i2c/soc_camera/imagers/ov2311.c | 50 ++++++++++++++++++++++++++-
 drivers/media/i2c/soc_camera/imagers/ov2311.h |  2 +-
 2 files changed, 50 insertions(+), 2 deletions(-)

diff --git a/drivers/media/i2c/soc_camera/imagers/ov2311.c b/drivers/media/i2c/soc_camera/imagers/ov2311.c
index d49ca96..24c336e 100644
--- a/drivers/media/i2c/soc_camera/imagers/ov2311.c
+++ b/drivers/media/i2c/soc_camera/imagers/ov2311.c
@@ -39,6 +39,7 @@ struct ov2311_priv {
 	struct v4l2_rect		rect;
 	int				subsampling;
 	int				fps_denominator;
+	int				fps_numerator;
 	int				init_complete;
 	u8				id[6];
 	int				dvp_order;
@@ -252,6 +253,50 @@ static int ov2311_g_mbus_config(struct v4l2_subdev *sd,
 	return 0;
 }
 
+static int ov2311_g_parm(struct v4l2_subdev *sd, struct v4l2_streamparm *parms)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct ov2311_priv *priv = to_ov2311(client);
+	struct v4l2_captureparm *cp = &parms->parm.capture;
+
+	if (parms->type != V4L2_BUF_TYPE_VIDEO_CAPTURE)
+		return -EINVAL;
+
+	memset(cp, 0, sizeof(struct v4l2_captureparm));
+	cp->capability = V4L2_CAP_TIMEPERFRAME;
+	cp->timeperframe.numerator = priv->fps_numerator;
+	cp->timeperframe.denominator = priv->fps_denominator;
+
+	return 0;
+}
+
+static int ov2311_s_parm(struct v4l2_subdev *sd, struct v4l2_streamparm *parms)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct ov2311_priv *priv = to_ov2311(client);
+	struct v4l2_captureparm *cp = &parms->parm.capture;
+	int ret = 0;
+	int vts;
+
+	if (parms->type != V4L2_BUF_TYPE_VIDEO_CAPTURE)
+		return -EINVAL;
+	if (cp->extendedmode != 0)
+		return -EINVAL;
+
+	if (priv->fps_denominator != cp->timeperframe.denominator ||
+	    priv->fps_numerator != cp->timeperframe.numerator) {
+		vts = 0x05ca * 60 * cp->timeperframe.numerator / cp->timeperframe.denominator;
+
+		ret = reg16_write(client, 0x380e, vts >> 8);	/* VTS MSB */
+		ret = reg16_write(client, 0x380f, vts & 0xff);	/* VTS LSB */
+
+		priv->fps_numerator = cp->timeperframe.numerator;
+		priv->fps_denominator = cp->timeperframe.denominator;
+	}
+
+	return ret;
+}
+
 #ifdef CONFIG_VIDEO_ADV_DEBUG
 static int ov2311_g_register(struct v4l2_subdev *sd,
 			     struct v4l2_dbg_register *reg)
@@ -358,6 +403,8 @@ static const struct v4l2_ctrl_ops ov2311_ctrl_ops = {
 static struct v4l2_subdev_video_ops ov2311_video_ops = {
 	.s_stream	= ov2311_s_stream,
 	.g_mbus_config	= ov2311_g_mbus_config,
+	.g_parm		= ov2311_g_parm,
+	.s_parm		= ov2311_s_parm,
 };
 
 static const struct v4l2_subdev_pad_ops ov2311_subdev_pad_ops = {
@@ -479,7 +526,8 @@ static int ov2311_probe(struct i2c_client *client,
 	priv->rect.top = 0;
 	priv->rect.width = OV2311_MAX_WIDTH;
 	priv->rect.height = OV2311_MAX_HEIGHT;
-	priv->fps_denominator = 30;
+	priv->fps_numerator = 1;
+	priv->fps_denominator = 60;
 
 	v4l2_ctrl_handler_init(&priv->hdl, 4);
 	v4l2_ctrl_new_std(&priv->hdl, &ov2311_ctrl_ops,
diff --git a/drivers/media/i2c/soc_camera/imagers/ov2311.h b/drivers/media/i2c/soc_camera/imagers/ov2311.h
index f76662a..1ed3139 100644
--- a/drivers/media/i2c/soc_camera/imagers/ov2311.h
+++ b/drivers/media/i2c/soc_camera/imagers/ov2311.h
@@ -101,7 +101,7 @@ static const struct ov2311_reg ov2311_regs_wizard_r1c[] = {
 {0x380c, 0x03},
 {0x380d, 0xa8},
 {0x380e, 0x05},
-{0x380f, 0x88},
+{0x380f, 0xca},
 {0x3810, OV2311_X_START >> 8},
 {0x3811, OV2311_X_START & 0xff},
 {0x3812, OV2311_Y_START >> 8},
-- 
2.7.4

