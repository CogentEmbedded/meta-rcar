From a51f72f0a1ead5070df00fbabd6f97fb05234c6c Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date: Tue, 10 Mar 2020 14:49:21 +0300
Subject: [PATCH] i2c: i2c-rcar: use threaded interrupts

Rework interrupts handling by adding threaded interrupts and
loop handling in threaded_irq.
This readuces the amount of i2c interrupts and reduce i2c overhead since
i2c provides too many interrupts.

Signed-off-by: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
---
 drivers/i2c/busses/i2c-rcar.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/drivers/i2c/busses/i2c-rcar.c b/drivers/i2c/busses/i2c-rcar.c
index a25fd9c..ddd3b39 100644
--- a/drivers/i2c/busses/i2c-rcar.c
+++ b/drivers/i2c/busses/i2c-rcar.c
@@ -612,6 +612,23 @@ static irqreturn_t rcar_i2c_irq(int irq, void *ptr)
 		return IRQ_NONE;
 	}
 
+#define I2C_THREADED
+#ifdef I2C_THREADED
+	return IRQ_WAKE_THREAD;
+}
+
+static irqreturn_t rcar_i2c_threaded_irq(int this_irq, void *ptr)
+{
+	struct rcar_i2c_priv *priv = ptr;
+	u32 msr;
+
+do {
+
+	msr = rcar_i2c_read(priv, ICMSR);
+	msr &= rcar_i2c_read(priv, ICMIER);
+	if (!msr)
+		return IRQ_HANDLED;
+#endif
 	/* Arbitration lost */
 	if (msr & MAL) {
 		priv->flags |= ID_DONE | ID_ARBLOST;
@@ -644,6 +661,9 @@ static irqreturn_t rcar_i2c_irq(int irq, void *ptr)
 		rcar_i2c_write(priv, ICMSR, 0);
 		wake_up(&priv->wait);
 	}
+#ifdef I2C_THREADED
+} while(msr);
+#endif
 
 	return IRQ_HANDLED;
 }
@@ -959,7 +979,11 @@ static int rcar_i2c_probe(struct platform_device *pdev)
 
 
 	irq = platform_get_irq(pdev, 0);
+#ifdef I2C_THREADED
+	ret = devm_request_threaded_irq(dev, irq, rcar_i2c_irq, rcar_i2c_threaded_irq, IRQF_ONESHOT, dev_name(dev), priv);
+#else
 	ret = devm_request_irq(dev, irq, rcar_i2c_irq, 0, dev_name(dev), priv);
+#endif
 	if (ret < 0) {
 		dev_err(dev, "cannot get irq %d\n", irq);
 		goto out_pm_disable;
-- 
2.7.4

